<?php

namespace BasicDashboard\Web\ApplicantRecord\Validation;

use Illuminate\Foundation\Http\FormRequest;

/**
 *
 * A StoreApplicantRecordRequest is responsible validation of while storing.
 * Generated By Custom Artisan Cmd
 * @author Nay Ba la
 * https://github.com/naybala
 * https://naybala.netlify.app/
 *
 */

class StoreApplicantRecordRequest extends FormRequest
{
    public function authorize(): bool
    {
        return true;
    }

    public function rules(): array
    {
        return [
            "applicant_sr" => "required",
            "mesid" => "nullable",
            "email" => "nullable|email",
            "current_school" => "nullable",
            "additional_data1" => "nullable",
            "additional_data2" => "nullable",
            "exam_type" => "required",
            "sub_1" => "nullable|numeric",
            "sub_2" => "nullable|numeric", 
            "sub_3" => "nullable|numeric",
            "sub_4" => "nullable|numeric",
            "sub_5" => "nullable|numeric",
            "sub_6" => "nullable|numeric",
            "program_score" => "nullable|numeric",
            "essay_score" => "nullable|numeric",
            "mental_score" => "nullable|numeric",
            "activity_type" => "nullable",
            "month" => "nullable",
            "activity_score" => "nullable|numeric",
            "total_edu_marks" => "nullable|numeric",
        ];
    }

    protected function prepareForValidation()
    {
        $subjectsScore = 0;

        // Calculate total subject score
        foreach ($this->all() as $key => $value) {
            if (str_starts_with($key, 'sub_') && is_numeric($value)) {
                $subjectsScore += (float)$value;
            }
        }

        $this->merge([
            'total_edu_marks' => $subjectsScore
        ]);
    }
}
